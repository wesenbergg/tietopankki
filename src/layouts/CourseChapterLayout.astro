---
import type { MarkdownHeading } from "astro";
import TableOfContents from "../components/client/TableOfContents.svelte";
import generateToc from "../utils/generateToc.ts";
import { getCollection } from "astro:content";
import CourseContents from "../components/client/CourseContents.svelte";
import Layout from "./Layout.astro";
import ArticleNavigation from "../components/ArticleNavigation.astro";

export interface Props {
  title?: string;
  description?: string;
  headings: MarkdownHeading[];
}
const { title, description, headings } = Astro.props;
const toc = generateToc(headings);

const getCourseNav = async () => {
  const posts = await getCollection("testi");

  return posts.map((post) => ({
    id: post.id,
    slug: post.slug,
    data: post.data,
    collection: post.collection,
    depth: (post.slug.split("/") || []).length,
  }));
};
let chapters = await getCourseNav();
---

<Layout {title} {description}>
  <CourseContents {chapters} />
  <TableOfContents client:idle {toc} />
  <article class="md:ml-64 max-md:pl-8 lg:mr-64 max-lg:pr-8 pb-8">
    <ArticleNavigation {title} {chapters}>
      <slot />
    </ArticleNavigation>
  </article>
</Layout>
